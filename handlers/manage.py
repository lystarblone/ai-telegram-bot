from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from database import Database
import logging

router = Router()
logger = logging.getLogger(__name__)

@router.message(Command("list"))
async def cmd_list(message: Message):
    user_id = message.from_user.id
    db = Database()
    documents = db.get_documents(user_id)
    
    if not documents:
        await message.answer("üìÇ –£ –≤–∞—Å –Ω–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π /upload –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤.")
        logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –±–µ–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, user_id: {user_id}")
        return
    
    response = "üìã –°–ø–∏—Å–æ–∫ —Ç–≤–æ–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:\n"
    for doc in documents:
        response += f"ID: {doc.id} | –ù–∞–∑–≤–∞–Ω–∏–µ: {doc.file_name} | –ó–∞–≥—Ä—É–∂–µ–Ω: {doc.created_at.strftime('%Y-%m-%d %H:%M')}\n"
    response += "\n–ò—Å–ø–æ–ª—å–∑—É–π /ask –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–ª–∏ /delete <ID> –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞."
    
    await message.answer(response)
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")

@router.message(Command("delete"))
async def cmd_delete(message: Message):
    user_id = message.from_user.id
    args = message.text.split()
    
    if len(args) != 2 or not args[1].isdigit():
        await message.answer("‚ö†Ô∏è –£–∫–∞–∂–∏ ID –¥–æ–∫—É–º–µ–Ω—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: /delete 1")
        logger.warning(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã /delete –æ—Ç user_id {user_id}")
        return
    
    document_id = int(args[1])
    db = Database()
    
    if db.delete_document(document_id, user_id):
        await message.answer(f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç ID {document_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")
        logger.info(f"–î–æ–∫—É–º–µ–Ω—Ç ID {document_id} —É–¥–∞–ª–µ–Ω –¥–ª—è user_id {user_id}")
    else:
        await message.answer(f"‚ùå –î–æ–∫—É–º–µ–Ω—Ç ID {document_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —Ç–µ–±–µ.")
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç ID {document_id} –¥–ª—è user_id {user_id}")